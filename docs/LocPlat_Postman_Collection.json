{
  "info": {
    "name": "LocPlat - AI Translation Service",
    "description": "Complete Postman collection for LocPlat translation service and field mapping system with comprehensive tests",
    "version": "2.1.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000"
    },
    {
      "key": "openai_api_key",
      "value": "sk-your-openai-key-here"
    },
    {
      "key": "anthropic_api_key",
      "value": "sk-ant-your-anthropic-key-here"
    },
    {
      "key": "mistral_api_key",
      "value": "your-mistral-key-here"
    },
    {
      "key": "client_id",
      "value": "test-directus-client"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Service Health Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Service is healthy', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.status).to.equal('ok');",
                  "    pm.expect(responseJson.services.database).to.equal('ok');",
                  "    pm.expect(responseJson.services.redis).to.equal('ok');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if all services are operational"
          }
        }
      ]
    },
    {
      "name": "Field Mapping Configuration",
      "item": [
        {
          "name": "Create Field Config - Articles",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Configuration created successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.client_id).to.equal('test-directus-client');",
                  "    pm.expect(responseJson.collection_name).to.equal('articles');",
                  "    pm.expect(responseJson.field_paths).to.include('title');",
                  "    pm.expect(responseJson.field_paths).to.include('metadata.description');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"collection_name\": \"articles\",\n  \"field_paths\": [\n    \"title\",\n    \"content\",\n    \"summary\",\n    \"metadata.description\"\n  ],\n  \"field_types\": {\n    \"title\": \"text\",\n    \"content\": \"wysiwyg\",\n    \"summary\": \"textarea\",\n    \"metadata.description\": \"text\"\n  },\n  \"directus_translation_pattern\": \"collection_translations\",\n  \"batch_processing\": false,\n  \"preserve_html_structure\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/config",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "config"]
            },
            "description": "Create field mapping configuration for articles"
          }
        },
        {
          "name": "Create Field Config - Products (RTL)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"collection_name\": \"products\",\n  \"field_paths\": [\n    \"name\",\n    \"description\",\n    \"features\"\n  ],\n  \"field_types\": {\n    \"name\": \"text\",\n    \"description\": \"textarea\",\n    \"features\": \"text\"\n  },\n  \"rtl_field_mapping\": {\n    \"ar\": {\n      \"field_paths\": [\"name\", \"description\", \"features\"],\n      \"custom_processing\": true\n    }\n  },\n  \"directus_translation_pattern\": \"language_collections\",\n  \"batch_processing\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/config",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "config"]
            },
            "description": "Create field configuration for products with RTL support"
          }
        }        ,
        {
          "name": "Get Field Config",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Configuration retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.field_paths).to.be.an('array');",
                  "    pm.expect(responseJson.field_paths.length).to.be.greaterThan(0);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/config/{{client_id}}/articles",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "config", "{{client_id}}", "articles"]
            },
            "description": "Retrieve field configuration"
          }
        },
        {
          "name": "List Client Configs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/config/{{client_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "config", "{{client_id}}"]
            },
            "description": "List all configurations for client"
          }
        }
      ]
    },
    {
      "name": "Field Extraction",
      "item": [
        {
          "name": "Extract Simple Fields",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field extraction successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.field_count).to.be.greaterThan(0);",
                  "    pm.expect(responseJson.extracted_fields).to.have.property('title');",
                  "    pm.expect(responseJson.extracted_fields).to.have.property('content');",
                  "    pm.expect(responseJson.extracted_fields.content.type).to.equal('wysiwyg');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"collection_name\": \"articles\",\n  \"content\": {\n    \"id\": 1,\n    \"title\": \"Getting Started with AI Translation\",\n    \"content\": \"<p>This is <strong>sample content</strong> with HTML</p>\",\n    \"summary\": \"A guide to AI translation\",\n    \"metadata\": {\n      \"description\": \"SEO description for the article\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/extract",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "extract"]
            },
            "description": "Extract fields from article content"
          }
        },
        {
          "name": "Extract with RTL Language",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"collection_name\": \"articles\",\n  \"content\": {\n    \"id\": 2,\n    \"title\": \"Arabic Translation Example\",\n    \"content\": \"<div>Complex HTML content</div>\",\n    \"summary\": \"Testing RTL language processing\"\n  },\n  \"language\": \"ar\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/extract",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "extract"]
            },
            "description": "Extract fields for Arabic translation"
          }
        },
        {
          "name": "Extract E-commerce Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"{{client_id}}\",\n  \"collection_name\": \"products\",\n  \"content\": {\n    \"id\": 101,\n    \"name\": \"Premium Wireless Headphones\",\n    \"description\": \"Experience crystal-clear sound quality with our premium wireless headphones.\\n\\n• Active noise cancellation\\n• 30-hour battery life\\n• Bluetooth 5.0 connectivity\",\n    \"features\": \"Noise cancellation, Long battery life, Wireless connectivity\",\n    \"price\": 199.99,\n    \"specifications\": {\n      \"weight\": \"250g\",\n      \"warranty\": \"2 years\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/extract",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "extract"]
            },
            "description": "Extract fields from e-commerce product data"
          }
        }
      ]
    }    ,
    {
      "name": "Field Validation",
      "item": [
        {
          "name": "Validate Field Paths",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Field validation successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.total_tested).to.equal(4);",
                  "    pm.expect(responseJson.total_valid).to.be.greaterThan(0);",
                  "    pm.expect(responseJson.field_paths['title'].exists).to.be.true;",
                  "    pm.expect(responseJson.field_paths['nonexistent.field'].exists).to.be.false;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": {\n    \"title\": \"Test Article\",\n    \"content\": \"<p>Test content</p>\",\n    \"metadata\": {\n      \"description\": \"Test description\"\n    }\n  },\n  \"field_paths\": [\n    \"title\",\n    \"content\",\n    \"metadata.description\",\n    \"nonexistent.field\"\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/validate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "validate"]
            },
            "description": "Validate field paths against content"
          }
        }
      ]
    },
    {
      "name": "Complete Workflow Test",
      "item": [
        {
          "name": "Full Workflow - Config → Extract → Translate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Translation successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('translated_text');",
                  "    pm.expect(responseJson.translated_text).to.not.be.empty;",
                  "    pm.expect(responseJson.target_lang).to.equal('ar');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Welcome to LocPlat! Our field mapping system makes it easy to translate complex content structures from Directus CMS.\",\n  \"source_lang\": \"en\",\n  \"target_lang\": \"ar\",\n  \"provider\": \"openai\",\n  \"api_key\": \"{{openai_api_key}}\",\n  \"model\": \"gpt-4o-mini\",\n  \"context\": \"LocPlat field mapping system introduction\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/translate/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "translate", ""]
            },
            "description": "Complete workflow test with automatic validation"
          }
        }
      ]
    },
    {
      "name": "Translation Tests",
      "item": [
        {
          "name": "OpenAI Translation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"Hello, welcome to LocPlat!\",\n  \"source_lang\": \"en\",\n  \"target_lang\": \"ar\",\n  \"provider\": \"openai\",\n  \"api_key\": \"{{openai_api_key}}\",\n  \"model\": \"gpt-4o-mini\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/translate/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "translate", ""]
            },
            "description": "Single text translation"
          }
        },
        {
          "name": "Anthropic Translation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"text\": \"How can I help you today?\",\n  \"source_lang\": \"en\",\n  \"target_lang\": \"ar\",\n  \"provider\": \"anthropic\",\n  \"api_key\": \"{{anthropic_api_key}}\",\n  \"model\": \"claude-3-haiku-20240307\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/translate/",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "translate", ""]
            },
            "description": "Anthropic translation test"
          }
        },
        {
          "name": "Batch Translation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"texts\": [\n    \"Welcome to our website!\",\n    \"How can we help you?\",\n    \"Thank you for visiting!\"\n  ],\n  \"source_lang\": \"en\",\n  \"target_lang\": \"ar\",\n  \"provider\": \"openai\",\n  \"api_key\": \"{{openai_api_key}}\",\n  \"model\": \"gpt-4o-mini\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/translate/batch",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "translate", "batch"]
            },
            "description": "Batch translation test"
          }
        }
      ]
    },
    {
      "name": "Error Handling",
      "item": [
        {
          "name": "Extract Without Configuration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Proper error for missing configuration', function () {",
                  "    pm.response.to.have.status(400);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.detail).to.include('No field paths configured');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"client_id\": \"nonexistent-client\",\n  \"collection_name\": \"nonexistent-collection\",\n  \"content\": {\n    \"title\": \"Test Article\",\n    \"content\": \"Test content\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/field-mapping/extract",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "field-mapping", "extract"]
            },
            "description": "Test error handling for missing configuration"
          }
        }
      ]
    }
  ]
}