version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    # Remove port mapping - Coolify handles this automatically
    environment:
      - SERVICE_FQDN_API_8000=${DOMAIN_NAME:-locplat.estatfinder.com}
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - LOG_LEVEL=${LOG_LEVEL}
      - MAX_WORKERS=${MAX_WORKERS}
      - CACHE_TTL=${CACHE_TTL}
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '${API_CPU_LIMIT:-1.0}'
          memory: ${API_MEMORY_LIMIT:-1G}
        reservations:
          cpus: '${API_CPU_RESERVATION:-0.25}'
          memory: ${API_MEMORY_RESERVATION:-256M}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - locplat-network

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_INITDB_ARGS=${POSTGRES_INITDB_ARGS:-}    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    deploy:
      resources:
        limits:
          cpus: '${DB_CPU_LIMIT:-0.5}'
          memory: ${DB_MEMORY_LIMIT:-512M}
        reservations:
          cpus: '${DB_CPU_RESERVATION:-0.1}'
          memory: ${DB_MEMORY_RESERVATION:-128M}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - locplat-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 200mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '${REDIS_CPU_LIMIT:-0.2}'
          memory: ${REDIS_MEMORY_LIMIT:-256M}
        reservations:
          cpus: '${REDIS_CPU_RESERVATION:-0.05}'
          memory: ${REDIS_MEMORY_RESERVATION:-64M}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - locplat-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  locplat-network:
    external: true
    name: coolify